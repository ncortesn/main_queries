library(MASS)
library(ROSE)
library(rpart)
library(rpart.plot)
library(ggplot2)
library(caret)


datos<-Cabos

datos$Morosidad_Tipo<- as.factor(datos$Morosidad_Tipo)
datos$Membership<- as.factor(datos$Membership)
datos$Estado<- as.factor(datos$Estado)
datos$Viaje<- as.factor(datos$Viaje)



set.seed(123)


index_testing <- sample(datos$Row,size =8770, replace=F)
training<-datos[!(datos$Row %in% index_testing),]
testing<-datos[(datos$Row %in% index_testing),]

train<-training[,5:83]
test<-testing[,5:83]

table(train$Viaje)
table(test$Viaje)

allVars<-colnames(train)
predictorVars<-allVars[!allVars%in%"Viaje"]
predictorVars<-paste(predictorVars, collapse="+")
form=as.formula(paste("Viaje~", predictorVars,collapse="+"))
form

train.rose <- ROSE(Viaje~.,train, p=0.2,seed=1234)$data


model <- rpart(Viaje ~ ., data=train.rose)
model
predict(model,test)
predicciones1 <- predict(model, test, type="class")
owner_predicciones<-data.frame(predicciones1, test)
table(owner_predicciones$predicciones1)
table(test$Viaje)
rpart.plot(model)

postResample(predicciones1, test$Viaje)
sensitivity(predicciones1, test$Viaje)
confusionMatrix(predicciones1, test$Viaje)
?parse


printcp(model)
plotcp(model)
podaarbol=prune(model,cp= 0.045838896 )
rpart.plot(podaarbol)

x<-train
model
parse_tree(train, model)

library(devtools)
library(riv)


parse_tree <- function (df=NULL, model=NULL) {
  log <- capture.output({
    rpart.rules <- path.rpart(model,rownames(model$frame)[model$frame$var=="<leaf>"])
  })  
  args <- c("<=",">=","<",">","=")
  rules_out <- "case "
  i <- 1
  
  for (rule in rpart.rules) {  
    rule_out <- character(0)
    for (component in rule) {
      sep <- lapply(args, function(x) length(unlist(strsplit(component,x)))) > 1
      elements <- unlist(strsplit(component,(args[sep])[1]))
      if(!(elements[1]=="root")) {
        if (is.numeric(df[,elements[[1]]])) {
          rule_out <- c(rule_out,paste(elements[1],(args[sep])[1],elements[2]))
        } else {
          rule_out <- c(rule_out,paste0(elements[1]," in (",paste0("'",unlist(strsplit(elements[2],",")),"'",collapse=","),")"))
        }
      }
    }
    rules_out <- c(rules_out, paste0("when ", paste(rule_out,collapse=" AND ")," then 'node_" ,names(rpart.rules)[i],"'"))
    if(i==length(rpart.rules)) rules_out <- c(rules_out," end ")
    i <- i +1
  }
  sql_out <- paste(rules_out, collapse=" ")
  sql_out  
}
